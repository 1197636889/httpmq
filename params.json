{"name":"Httpmq","tagline":"A simple HTTP message queue written in Go with goleveldb, just like httpsqs wriiten in C with Tokyo Cabinet.","body":"httpmq\r\n======\r\n\r\nThis program is a simple HTTP message queue written in Go with gdleveldb, just like httpsqs wriiten in C with Tokyo Cabinet.\r\n\r\nFeature\r\n======\r\n\r\n* Very simple, less than 300 lines Go code.\r\n* Very fast, more than 10000 requests/sec.\r\n* High concurrency, support the tens of thousands of concurrent connections.\r\n* Multiple queue.\r\n* Low memory consumption, mass data storage, storage dozens of GB of data takes less than 100MB of physical memory buffer.\r\n* Convenient to change the maximum queue length of per-queue.\r\n* Queue status view.\r\n* Be able to view the contents of the specified queue ID.\r\n* Multi-Character encoding support.\r\n\r\nUsage\r\n======\r\n  ```\r\n  Usage of ./httpmq:\r\n    -auth=\"\": auth password to access httpmq\r\n    -buffer=4: write buffer(MB)\r\n    -cache=8: cache size(MB)\r\n    -cpu=1: cpu number for httpmq\r\n    -db=\"level.db\": database path\r\n    -ip=\"0.0.0.0\": ip address to listen on\r\n    -maxqueue=1000000: the max queue length\r\n    -port=\"1218\": port to listen on\r\n    -readtimeout=15: read timeout for an http request\r\n    -verbose=true: output log\r\n    -writetimeout=15: write timeout for an http request\r\n  ```\r\n\r\n1. PUT text message into a queue\r\n\r\n  HTTP GET protocol (Using curl for example):\r\n  ```\r\n  curl \"http://host:port/?name=your_queue_name&opt=put&data=url_encoded_text_message&auth=mypass123\"\r\n  ```\r\n  HTTP POST protocol (Using curl for example):\r\n  ```\r\n  curl -d \"url_encoded_text_message\" \"http://host:port/?name=your_queue_name&opt=put&auth=mypass123\"\r\n  ```\r\n\r\n2. GET text message from a queue\r\n\r\n  HTTP GET protocol (Using curl for example):\r\n  ```\r\n  curl \"http://host:port/?charset=utf-8&name=your_queue_name&opt=get&auth=mypass123\"\r\n  ```\r\n\r\n3. View queue status\r\n\r\n  HTTP GET protocol (Using curl for example):\r\n  ```\r\n  curl \"http://host:port/?name=your_queue_name&opt=status&auth=mypass123\"\r\n  ```\r\n4. View queue details\r\n\r\n  HTTP GET protocol (Using curl for example):\r\n  ```\r\n  curl \"http://host:port/?name=your_queue_name&opt=view&pos=1&auth=mypass123\"\r\n  ```\r\n5. Reset queue\r\n\r\n  HTTP GET protocol (Using curl for example):\r\n  ```\r\n  curl \"http://host:port/?name=your_queue_name&opt=reset&pos=1&auth=mypass123\"\r\n  ```\r\n\r\nBenchmark\r\n========\r\n\r\nTest machine:\r\n  ```\r\n  CPU:    2  AMD Athlon(tm) II X2 245 Processor\r\n  Memory: Size: 2048 MB\r\n          Locator: DIMM0\r\n          Range Size: 2 GB\r\n          Size: 2048 MB\r\n          Locator: DIMM1\r\n          Range Size: 2 GB\r\n          Size: No Module Installed\r\n          Locator: DIMM2\r\n          Size: No Module Installed\r\n          Locator: DIMM3\r\n  ```\r\n\r\n\r\n###PUT queue:\r\n\r\n    ab -k -c 1000 -n 10000 \"http://127.0.0.1:1218/?name=xoyo&opt=put&data=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n    This is ApacheBench, Version 2.3 <$Revision: 655654 $>\r\n    Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\n    Licensed to The Apache Software Foundation, http://www.apache.org/\r\n    \r\n    Benchmarking 127.0.0.1 (be patient)\r\n    Completed 1000 requests\r\n    Completed 2000 requests\r\n    Completed 3000 requests\r\n    Completed 4000 requests\r\n    Completed 5000 requests\r\n    Completed 6000 requests\r\n    Completed 7000 requests\r\n    Completed 8000 requests\r\n    Completed 9000 requests\r\n    Completed 10000 requests\r\n    Finished 10000 requests\r\n    \r\n    \r\n    Server Software:        \r\n    Server Hostname:        127.0.0.1\r\n    Server Port:            1218\r\n    \r\n    Document Path:          /?name=xoyo&opt=put&data=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n    Document Length:        13 bytes\r\n    \r\n    Concurrency Level:      1000\r\n    Time taken for tests:   0.771 seconds\r\n    Complete requests:      10000\r\n    Failed requests:        0\r\n    Write errors:           0\r\n    Keep-Alive requests:    10000\r\n    Total transferred:      1640000 bytes\r\n    HTML transferred:       130000 bytes\r\n    Requests per second:    12964.69 [#/sec] (mean)\r\n    Time per request:       77.133 [ms] (mean)\r\n    Time per request:       0.077 [ms] (mean, across all concurrent requests)\r\n    Transfer rate:          2076.38 [Kbytes/sec] received\r\n    \r\n    Connection Times (ms)\r\n                  min  mean[+/-sd] median   max\r\n    Connect:        0    2   7.7      0      41\r\n    Processing:     0   70  74.9     73     473\r\n    Waiting:        0   70  74.9     73     473\r\n    Total:          0   72  75.8     76     473\r\n    \r\n    Percentage of the requests served within a certain time (ms)\r\n      50%     76\r\n      66%     91\r\n      75%     98\r\n      80%    110\r\n      90%    183\r\n      95%    216\r\n      98%    272\r\n      99%    310\r\n     100%    473 (longest request)\r\n\r\n###GET queue:\r\n\r\n    ab -k -c 1000 -n 10000 \"http://127.0.0.1:1218/?name=xoyo&opt=get\"                                                                                                   [system]\r\n    This is ApacheBench, Version 2.3 <$Revision: 655654 $>\r\n    Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\n    Licensed to The Apache Software Foundation, http://www.apache.org/\r\n    \r\n    Benchmarking 127.0.0.1 (be patient)\r\n    Completed 1000 requests\r\n    Completed 2000 requests\r\n    Completed 3000 requests\r\n    Completed 4000 requests\r\n    Completed 5000 requests\r\n    Completed 6000 requests\r\n    Completed 7000 requests\r\n    Completed 8000 requests\r\n    Completed 9000 requests\r\n    Completed 10000 requests\r\n    Finished 10000 requests\r\n    \r\n    \r\n    Server Software:        \r\n    Server Hostname:        127.0.0.1\r\n    Server Port:            1218\r\n    \r\n    Document Path:          /?name=xoyo&opt=get\r\n    Document Length:        512 bytes\r\n    \r\n    Concurrency Level:      1000\r\n    Time taken for tests:   0.703 seconds\r\n    Complete requests:      10000\r\n    Failed requests:        0\r\n    Write errors:           0\r\n    Keep-Alive requests:    10000\r\n    Total transferred:      6640000 bytes\r\n    HTML transferred:       5120000 bytes\r\n    Requests per second:    14227.83 [#/sec] (mean)\r\n    Time per request:       70.285 [ms] (mean)\r\n    Time per request:       0.070 [ms] (mean, across all concurrent requests)\r\n    Transfer rate:          9225.86 [Kbytes/sec] received\r\n    \r\n    Connection Times (ms)\r\n                  min  mean[+/-sd] median   max\r\n    Connect:        0    1   5.3      0      33\r\n    Processing:     0   49  61.2     20     449\r\n    Waiting:        0   49  61.2     20     449\r\n    Total:          0   50  62.0     22     471\r\n    \r\n    Percentage of the requests served within a certain time (ms)\r\n      50%     22\r\n      66%     67\r\n      75%     87\r\n      80%    105\r\n      90%    128\r\n      95%    161\r\n      98%    224\r\n      99%    240\r\n     100%    471 (longest request)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}